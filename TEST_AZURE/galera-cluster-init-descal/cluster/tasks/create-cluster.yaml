---
- name: Copy MariaDB.repo file
  become: yes
  copy:
    src: MariaDB.repo
    dest: /etc/yum.repos.d/

- name: Install the packages
  become: yes
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - MariaDB-server
    - MariaDB-client
    - galera
    - rsync
    - firewalld
    - git
    - autoconf
    - automake
    - libtool
    - gcc-c++
    - nmap-ncat
    - tcpdump
  notify:
    - Enable firewalld

- name: Start firewalld
  become: yes
  shell: "systemctl start firewalld"

- name: Configure firewall
  become: yes
  shell: "firewall-cmd --zone=public --add-port={{ item }}/tcp --permanent"
  loop:
     - 4567
     - 4568
     - 4444
     - 3306
     - 13306
  notify:
    - Reload firewall

- name: Configure SELinx 4567
  become: yes
  shell: "semanage port -m -t mysqld_port_t -p tcp 4567"

- name: Configure SELinx 4444
  become: yes
  shell: "semanage port -m -t mysqld_port_t -p tcp 4444"

- name: Configure SELinux 4568
  become: yes
  shell: "semanage port -a -t mysqld_port_t -p tcp 4568"
  notify:
    - Permissive mysqld_t

- name: Disable SELinux
  become: yes
  selinux:
    state: disabled

- name: Disable SELinux setenforce
  become: yes
  shell: "setenforce 0"

- name: Show hostname
  debug:
    msg: "Hostname is: {{ ansible_hostname }} and ip is: {{ ansible_default_ipv4.address }}"

- name: Insert template node0
  become: yes
  template:
    src: node0.j2
    dest: /etc/my.cnf.d/node0.cnf
  when: ansible_hostname == 'vm-node1' # Hostname node0

- name: Insert template nodeX
  become: yes
  template:
    src: nodeX.j2
    dest: /etc/my.cnf.d/nodeX.cnf
  when: ansible_hostname != 'vm-node1' # Hostname node0

- name: Start mariadb service
  become: yes
  shell: systemctl start mariadb.service

- name: Create database user with name 'remote' with all database privileges
  mysql_user:
    login_user: root
    login_host: localhost
    name: 
      - "{{ user_remote }}"
    password: 
      - "{{ pass_remote }}"
    priv: '*.*:ALL'
    state: present

- name: Clone glb repository
  shell: sudo rm -rf glb && git clone https://github.com/codership/glb

- name: Bootstraping glb
  become: yes
  shell: ./bootstrap.sh && ./configure && make && make install
  args:
    chdir: glb/

- name: Copy mysql-check
  become: yes
  copy:
    remote_src: yes
    src: /home/rotar/glb/files/mysql.sh
    dest: /usr/local/bin/mysql-check.sh
    owner: root
    group: root
    mode: '0755'

- name: Copy glbd
  become: yes
  copy:
    src: /home/rotar/glb/files/glbd.sh
    dest: /etc/init.d/glb
    remote_src: yes
    owner: root
    group: root
    mode: '0755'

- name: Insert glbd file
  become: yes
  template:
    src: glbd.j2
    dest: /etc/sysconfig/glbd

- name: Start galera load balancer
  become: yes
  shell: "service glb start"
